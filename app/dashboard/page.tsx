import { Header } from "@/components/layout/header"
import { Footer } from "@/components/layout/footer"
import { GlassCard } from "@/components/ui/glass-card"
import { GradientButton } from "@/components/ui/gradient-button"
import { Button } from "@/components/ui/button"
import { Progress } from "@/components/ui/progress"
import { BookOpen, Award, MessageCircle, ArrowRight, CheckCircle, Target } from "lucide-react"
import Link from "next/link"
import Image from "next/image"

// Mock user data - in real app this would come from database
const userData = {
  name: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
  email: "anna@example.com",
  avatar: "/professional-woman-avatar.png",
  joinDate: "2024-01-15",
  totalLearningTime: 45, // hours
  completedCourses: 2,
  activeCourses: 3,
  certificates: 2,
  currentStreak: 7, // days
  totalPoints: 1250,
}

const enrolledCourses = [
  {
    id: "1",
    title: "–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∫–∏—Ç–∞–π—Å–∫–∏–π –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤",
    progress: 65,
    totalLessons: 7,
    completedLessons: 4,
    lastAccessed: "2024-01-20",
    nextLesson: "–õ–æ–≥–∏—Å—Ç–∏–∫–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞",
    image: "/placeholder-90s8j.png",
    timeSpent: 8, // hours
  },
  {
    id: "2",
    title: "Telegram Mini Apps: —Å—Ç–∞—Ä—Ç –∑–∞ 7 –¥–Ω–µ–π",
    progress: 30,
    totalLessons: 10,
    completedLessons: 3,
    lastAccessed: "2024-01-18",
    nextLesson: "–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞",
    image: "/telegram-mini-app-dev.png",
    timeSpent: 6, // hours
  },
  {
    id: "3",
    title: "–ò–Ω–∂–µ–Ω–µ—Ä–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤: –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã —Å –ò–ò",
    progress: 100,
    totalLessons: 6,
    completedLessons: 6,
    lastAccessed: "2024-01-10",
    nextLesson: null,
    image: "/ai-prompt-dashboard.png",
    timeSpent: 8, // hours
    completed: true,
  },
]

const recentActivity = [
  {
    type: "lesson_completed",
    title: "–ó–∞–≤–µ—Ä—à–µ–Ω —É—Ä–æ–∫ '–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞'",
    course: "–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∫–∏—Ç–∞–π—Å–∫–∏–π –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤",
    timestamp: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥",
    points: 50,
  },
  {
    type: "chat_session",
    title: "–°–µ—Å—Å–∏—è —Å –ò–ò-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º",
    course: "Telegram Mini Apps",
    timestamp: "1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥",
    duration: "25 –º–∏–Ω—É—Ç",
  },
  {
    type: "certificate_earned",
    title: "–ü–æ–ª—É—á–µ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç",
    course: "–ò–Ω–∂–µ–Ω–µ—Ä–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤",
    timestamp: "3 –¥–Ω—è –Ω–∞–∑–∞–¥",
    points: 100,
  },
  {
    type: "course_started",
    title: "–ù–∞—á–∞—Ç –Ω–æ–≤—ã–π –∫—É—Ä—Å",
    course: "–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∫–∏—Ç–∞–π—Å–∫–∏–π –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤",
    timestamp: "1 –Ω–µ–¥–µ–ª—è –Ω–∞–∑–∞–¥",
    points: 25,
  },
]

const achievements = [
  {
    id: "first_course",
    title: "–ü–µ—Ä–≤—ã–π –∫—É—Ä—Å",
    description: "–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∫—É—Ä—Å",
    icon: "üéì",
    earned: true,
    earnedDate: "2024-01-10",
  },
  {
    id: "week_streak",
    title: "–ù–µ–¥–µ–ª—è –ø–æ–¥—Ä—è–¥",
    description: "–£—á–∏—Ç–µ—Å—å 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
    icon: "üî•",
    earned: true,
    earnedDate: "2024-01-20",
  },
  {
    id: "ai_master",
    title: "–ú–∞—Å—Ç–µ—Ä –ò–ò",
    description: "–ü—Ä–æ–≤–µ–¥–∏—Ç–µ 50 —Å–µ—Å—Å–∏–π —Å –ò–ò-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º",
    icon: "ü§ñ",
    earned: false,
    progress: 32,
    target: 50,
  },
  {
    id: "polyglot",
    title: "–ü–æ–ª–∏–≥–ª–æ—Ç",
    description: "–ò–∑—É—á–∏—Ç–µ 3 —è–∑—ã–∫–∞",
    icon: "üåç",
    earned: false,
    progress: 1,
    target: 3,
  },
]

export default function DashboardPage() {
  return (
    <div className="min-h-screen">
      <Header />

      <div className="pt-32 pb-20 px-6">
        <div className="max-w-7xl mx-auto">
          {/* Welcome Section */}
          <div className="mb-8">
            <div className="flex items-center gap-4 mb-4">
              <Image
                src={userData.avatar || "/placeholder.svg"}
                alt={userData.name}
                width={64}
                height={64}
                className="rounded-full"
              />
              <div>
                <h1 className="text-3xl font-bold font-sans">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {userData.name}!</h1>
                <p className="text-muted-foreground font-serif">–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ —Å –ò–ò-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º</p>
              </div>
            </div>

            {/* Stats Cards */}
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <GlassCard className="p-4 text-center">
                <div className="text-2xl font-bold text-primary mb-1">{userData.totalLearningTime}—á</div>
                <div className="text-sm text-muted-foreground">–í—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è</div>
              </GlassCard>
              <GlassCard className="p-4 text-center">
                <div className="text-2xl font-bold text-primary mb-1">{userData.activeCourses}</div>
                <div className="text-sm text-muted-foreground">–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—Å–æ–≤</div>
              </GlassCard>
              <GlassCard className="p-4 text-center">
                <div className="text-2xl font-bold text-primary mb-1">{userData.certificates}</div>
                <div className="text-sm text-muted-foreground">–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤</div>
              </GlassCard>
              <GlassCard className="p-4 text-center">
                <div className="text-2xl font-bold text-primary mb-1">{userData.currentStreak}</div>
                <div className="text-sm text-muted-foreground">–î–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
              </GlassCard>
            </div>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            {/* Main Content */}
            <div className="lg:col-span-2 space-y-8">
              {/* Continue Learning */}
              <section>
                <h2 className="text-2xl font-bold font-sans mb-6">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ</h2>
                <div className="space-y-4">
                  {enrolledCourses
                    .filter((course) => !course.completed)
                    .map((course) => (
                      <GlassCard key={course.id} className="p-6">
                        <div className="flex items-start gap-4">
                          <Image
                            src={course.image || "/placeholder.svg"}
                            alt={course.title}
                            width={80}
                            height={60}
                            className="rounded-lg object-cover"
                          />
                          <div className="flex-1 min-w-0">
                            <h3 className="font-bold font-sans text-lg mb-2 truncate">{course.title}</h3>
                            <div className="flex items-center gap-4 text-sm text-muted-foreground mb-3">
                              <span>
                                {course.completedLessons} –∏–∑ {course.totalLessons} —É—Ä–æ–∫–æ–≤
                              </span>
                              <span>{course.timeSpent}—á –∏–∑—É—á–µ–Ω–æ</span>
                            </div>
                            <div className="mb-4">
                              <div className="flex items-center justify-between text-sm mb-1">
                                <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                                <span>{course.progress}%</span>
                              </div>
                              <Progress value={course.progress} className="h-2" />
                            </div>
                            {course.nextLesson && (
                              <div className="flex items-center justify-between">
                                <span className="text-sm text-muted-foreground">
                                  –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫: {course.nextLesson}
                                </span>
                                <GradientButton size="sm" asChild>
                                  <Link href={`/learn/${course.id}/next`}>
                                    –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                                    <ArrowRight className="ml-1 w-4 h-4" />
                                  </Link>
                                </GradientButton>
                              </div>
                            )}
                          </div>
                        </div>
                      </GlassCard>
                    ))}
                </div>
              </section>

              {/* Recent Activity */}
              <section>
                <h2 className="text-2xl font-bold font-sans mb-6">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
                <GlassCard className="p-6">
                  <div className="space-y-4">
                    {recentActivity.map((activity, index) => (
                      <div key={index} className="flex items-start gap-3 pb-4 border-b border-white/10 last:border-b-0">
                        <div className="w-8 h-8 rounded-full bg-primary/20 flex items-center justify-center flex-shrink-0 mt-1">
                          {activity.type === "lesson_completed" && <CheckCircle className="w-4 h-4 text-primary" />}
                          {activity.type === "chat_session" && <MessageCircle className="w-4 h-4 text-primary" />}
                          {activity.type === "certificate_earned" && <Award className="w-4 h-4 text-primary" />}
                          {activity.type === "course_started" && <BookOpen className="w-4 h-4 text-primary" />}
                        </div>
                        <div className="flex-1 min-w-0">
                          <div className="font-medium">{activity.title}</div>
                          <div className="text-sm text-muted-foreground">{activity.course}</div>
                          <div className="flex items-center gap-4 text-xs text-muted-foreground mt-1">
                            <span>{activity.timestamp}</span>
                            {activity.points && <span>+{activity.points} –±–∞–ª–ª–æ–≤</span>}
                            {activity.duration && <span>{activity.duration}</span>}
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </GlassCard>
              </section>
            </div>

            {/* Sidebar */}
            <div className="lg:col-span-1 space-y-6">
              {/* Achievements */}
              <GlassCard className="p-6">
                <h3 className="font-bold font-sans mb-4">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
                <div className="space-y-3">
                  {achievements.map((achievement) => (
                    <div
                      key={achievement.id}
                      className={`flex items-center gap-3 p-3 rounded-lg ${
                        achievement.earned
                          ? "bg-green-500/10 border border-green-500/20"
                          : "bg-white/5 border border-white/10"
                      }`}
                    >
                      <div className="text-2xl">{achievement.icon}</div>
                      <div className="flex-1 min-w-0">
                        <div className="font-medium text-sm">{achievement.title}</div>
                        <div className="text-xs text-muted-foreground">{achievement.description}</div>
                        {!achievement.earned && achievement.progress && (
                          <div className="mt-1">
                            <Progress value={(achievement.progress / achievement.target!) * 100} className="h-1" />
                            <div className="text-xs text-muted-foreground mt-1">
                              {achievement.progress}/{achievement.target}
                            </div>
                          </div>
                        )}
                      </div>
                    </div>
                  ))}
                </div>
              </GlassCard>

              {/* Learning Streak */}
              <GlassCard className="p-6">
                <h3 className="font-bold font-sans mb-4">–°–µ—Ä–∏—è –æ–±—É—á–µ–Ω–∏—è</h3>
                <div className="text-center">
                  <div className="text-3xl font-bold text-primary mb-2">{userData.currentStreak}</div>
                  <div className="text-sm text-muted-foreground mb-4">–¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
                  <div className="grid grid-cols-7 gap-1">
                    {Array.from({ length: 7 }, (_, i) => (
                      <div
                        key={i}
                        className={`w-6 h-6 rounded-sm ${i < userData.currentStreak ? "bg-primary" : "bg-white/10"}`}
                      />
                    ))}
                  </div>
                  <div className="text-xs text-muted-foreground mt-2">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</div>
                </div>
              </GlassCard>

              {/* Quick Actions */}
              <GlassCard className="p-6">
                <h3 className="font-bold font-sans mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
                <div className="space-y-3">
                  <Button
                    variant="outline"
                    className="w-full justify-start bg-white/10 backdrop-blur-sm border-white/20"
                    asChild
                  >
                    <Link href="/courses">
                      <BookOpen className="w-4 h-4 mr-2" />
                      –ù–∞–π—Ç–∏ –Ω–æ–≤—ã–π –∫—É—Ä—Å
                    </Link>
                  </Button>
                  <Button
                    variant="outline"
                    className="w-full justify-start bg-white/10 backdrop-blur-sm border-white/20"
                    asChild
                  >
                    <Link href="/certificates">
                      <Award className="w-4 h-4 mr-2" />
                      –ú–æ–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
                    </Link>
                  </Button>
                  <Button
                    variant="outline"
                    className="w-full justify-start bg-white/10 backdrop-blur-sm border-white/20"
                    asChild
                  >
                    <Link href="/profile">
                      <Target className="w-4 h-4 mr-2" />
                      –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
                    </Link>
                  </Button>
                </div>
              </GlassCard>

              {/* Recommendations */}
              <GlassCard className="p-6">
                <h3 className="font-bold font-sans mb-4">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
                <div className="space-y-3">
                  <div className="p-3 rounded-lg bg-white/5 border border-white/10">
                    <div className="font-medium text-sm mb-1">Python –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏</div>
                    <div className="text-xs text-muted-foreground mb-2">
                      –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é
                    </div>
                    <Button size="sm" variant="outline" className="w-full bg-white/10 border-white/20">
                      –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </Button>
                  </div>
                </div>
              </GlassCard>
            </div>
          </div>
        </div>
      </div>

      <Footer />
    </div>
  )
}
